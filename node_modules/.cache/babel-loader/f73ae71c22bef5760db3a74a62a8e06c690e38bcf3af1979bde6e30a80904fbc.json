{"ast":null,"code":"var _jsxFileName = \"/Users/vusimn/Desktop/Projects/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExpenseForm(props) {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState();\n  const [enteredDate, setEnteredDate] = useState('');\n\n  /***\n   * Instead setting multiple states can have one state for all the fields \n   * \n   * const [userInput, setUserIput] = useState({\n   *   eteredTitle: '',\n   *   enteredAmount: '',\n   *   enteredDate: '',\n   * })\n   */\n\n  /**\n        *  prevState is the snapshot of previous state do this if all fields are handled by one state \n        * below we only override one state which is enteredTitle all other field remain the same as previous state hence ...prevState\n        * setUserInput( (prevState) => {\n        *  return {...prevState, enteredTitle: event.target.value }\n        * })\n        */\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n  const inputChangeHandler = (identifier, value) => {\n    if (identifier === 'title') {\n      setEnteredTitle(value);\n    } else if (identifier === 'date') {\n      setEnteredDate(value);\n    } else {\n      setEnteredAmount(value);\n    }\n  };\n  const submitHandler = event => {\n    event.preventDefault(); // avoid page reloading\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData); //execute the reference function from parent componet <NewExpense>\n    //clear the values\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          value: enteredAmount,\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          value: enteredDate,\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Add Expense \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(ExpenseForm, \"OY9r+SN+WGgBYXgBH/cR25IACy8=\");\n_c = ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","props","_s","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","inputChangeHandler","identifier","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["/Users/vusimn/Desktop/Projects/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nexport default function ExpenseForm(props){\n   const [enteredTitle, setEnteredTitle] = useState('');\n   const [enteredAmount, setEnteredAmount] = useState();\n   const [enteredDate, setEnteredDate] = useState('');\n\n   /***\n    * Instead setting multiple states can have one state for all the fields \n    * \n    * const [userInput, setUserIput] = useState({\n    *   eteredTitle: '',\n    *   enteredAmount: '',\n    *   enteredDate: '',\n    * })\n    */\n\n   /**\n         *  prevState is the snapshot of previous state do this if all fields are handled by one state \n         * below we only override one state which is enteredTitle all other field remain the same as previous state hence ...prevState\n         * setUserInput( (prevState) => {\n         *  return {...prevState, enteredTitle: event.target.value }\n         * })\n         */\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    }\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    \n    }\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    }\n\n    const inputChangeHandler = (identifier, value) =>  {\n        if(identifier === 'title'){\n            setEnteredTitle(value);\n        } else if(identifier === 'date'){\n            setEnteredDate(value)\n        } else {\n            setEnteredAmount(value);\n        }\n    }\n    const submitHandler = (event) => {\n        event.preventDefault(); // avoid page reloading\n        const expenseData = {\n          title: enteredTitle,\n          amount: enteredAmount,\n          date: new Date(enteredDate)\n        }\n        \n        props.onSaveExpenseData(expenseData); //execute the reference function from parent componet <NewExpense>\n        //clear the values\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n\n    }\n\n    return(\n        <form onSubmit={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Title</label>\n                    <input \n                    type='text'\n                    value={enteredTitle}\n                     onChange={titleChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Amount</label>\n                    {/** supplying value = {enteredAmopunt}  we are doing a two way binding where input value is persisted**/}\n                    <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={amountChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Date</label>\n                    <input type='date' min='2019-01-01' max='2022-12-31' value={enteredDate} onChange={dateChangeHandler}/>\n                </div>\n            </div>\n            <div className='new-expense__actions'>\n                 <button type='submit'> Add Expense </button>\n            </div>\n        </form>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}