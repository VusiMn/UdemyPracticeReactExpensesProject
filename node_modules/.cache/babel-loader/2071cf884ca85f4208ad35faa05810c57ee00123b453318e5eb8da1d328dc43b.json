{"ast":null,"code":"var _jsxFileName = \"/Users/vusimn/Desktop/Projects/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExpenseForm(props) {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState();\n  const [enteredDate, setEnteredDate] = useState('');\n  const [showForm, setShowForm] = useState(true);\n\n  /***\n   * Instead setting multiple states can have one state for all the fields \n   * \n   * const [userInput, setUserIput] = useState({\n   *   eteredTitle: '',\n   *   enteredAmount: '',\n   *   enteredDate: '',\n   * })\n   */\n\n  /**\n        *  prevState is the snapshot of previous state do this if all fields are handled by one state \n        * below we only override one state which is enteredTitle all other field remain the same as previous state hence ...prevState\n        * setUserInput( (prevState) => {\n        *  return {...prevState, enteredTitle: event.target.value }\n        * })\n        */\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n  const submitHandler = event => {\n    event.preventDefault(); // avoid page reloading\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n\n    //console.log(expenseData);\n    props.onSaveExpenseData(expenseData); //execute the reference function from parent componet <NewExpense>\n    //clear the values\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n  if (showForm) {\n    return (\n      /*#__PURE__*/\n      /**\n       * if a button in a form is pressed as submitt the overral form issubmitted so the is a onSubmitt listener execute some function \n       */\n      _jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-expense__control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: enteredTitle,\n              onChange: titleChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-expense__control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0.01\",\n              step: \"0.01\",\n              value: enteredAmount,\n              onChange: amountChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-expense__control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              min: \"2019-01-01\",\n              max: \"2022-12-31\",\n              value: enteredDate,\n              onChange: dateChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \" cancel \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \" Add Expense \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    );\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense__controls\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Add NewExpense \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(ExpenseForm, \"fjOWvWHvUZDzEA5GRL+GR/7KDKg=\");\n_c = ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","props","_s","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","showForm","setShowForm","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["/Users/vusimn/Desktop/Projects/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nexport default function ExpenseForm(props){\n   const [enteredTitle, setEnteredTitle] = useState('');\n   const [enteredAmount, setEnteredAmount] = useState();\n   const [enteredDate, setEnteredDate] = useState('');\n   const [showForm, setShowForm] = useState(true);\n\n   /***\n    * Instead setting multiple states can have one state for all the fields \n    * \n    * const [userInput, setUserIput] = useState({\n    *   eteredTitle: '',\n    *   enteredAmount: '',\n    *   enteredDate: '',\n    * })\n    */\n\n   /**\n         *  prevState is the snapshot of previous state do this if all fields are handled by one state \n         * below we only override one state which is enteredTitle all other field remain the same as previous state hence ...prevState\n         * setUserInput( (prevState) => {\n         *  return {...prevState, enteredTitle: event.target.value }\n         * })\n         */\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    }\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    \n    }\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault(); // avoid page reloading\n        const expenseData = {\n          title: enteredTitle,\n          amount: enteredAmount,\n          date: new Date(enteredDate)\n        }\n        \n        //console.log(expenseData);\n        props.onSaveExpenseData(expenseData); //execute the reference function from parent componet <NewExpense>\n        //clear the values\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n\n    }\n\n    if(showForm){\n    return(\n        /**\n         * if a button in a form is pressed as submitt the overral form issubmitted so the is a onSubmitt listener execute some function \n         */\n\n        <form onSubmit={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Title</label>\n                    <input \n                    type='text'\n                    value={enteredTitle}\n                     onChange={titleChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Amount</label>\n                    {/** supplying value = {enteredAmopunt}  we are doing a two way binding where input value is persisted as we change the state the value field reflect most latest state**/}\n                    <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={amountChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Date</label>\n                    <input type='date' min='2019-01-01' max='2022-12-31' value={enteredDate} onChange={dateChangeHandler}/>\n                </div>\n            </div>\n            <div className='new-expense__actions'>\n                 <button> cancel </button>\n                 <button type='submit'> Add Expense </button>\n            </div>\n        </form>\n\n    )}\n\n    return(\n        <div className='new-expense__controls'>\n           <div className='new-expense__actions'>\n                 <button > Add NewExpense </button>\n            </div>\n        </div> \n    )\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}